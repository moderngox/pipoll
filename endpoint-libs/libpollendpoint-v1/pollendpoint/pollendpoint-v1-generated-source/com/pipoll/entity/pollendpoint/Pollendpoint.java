/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-01-14 17:53:03 UTC)
 * on 2015-03-14 at 00:35:05 UTC 
 * Modify at your own risk.
 */

package com.pipoll.entity.pollendpoint;

/**
 * Service definition for Pollendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link PollendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Pollendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the pollendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://nimble-lead-87107.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "pollendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Pollendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Pollendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getBEPoll".
   *
   * This request holds the parameters needed by the pollendpoint server.  After setting any optional
   * parameters, call the {@link GetBEPoll#execute()} method to invoke the remote operation.
   *
   * @param topic
   * @param link
   * @param categoryId
   * @param categoryName
   * @return the request
   */
  public GetBEPoll getBEPoll(java.lang.String topic, java.lang.String link, java.lang.Integer categoryId, java.lang.String categoryName) throws java.io.IOException {
    GetBEPoll result = new GetBEPoll(topic, link, categoryId, categoryName);
    initialize(result);
    return result;
  }

  public class GetBEPoll extends PollendpointRequest<com.pipoll.entity.pollendpoint.model.Poll> {

    private static final String REST_PATH = "poll/{topic}/{link}/{categoryId}/{categoryName}";

    /**
     * Create a request for the method "getBEPoll".
     *
     * This request holds the parameters needed by the the pollendpoint server.  After setting any
     * optional parameters, call the {@link GetBEPoll#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetBEPoll#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param topic
     * @param link
     * @param categoryId
     * @param categoryName
     * @since 1.13
     */
    protected GetBEPoll(java.lang.String topic, java.lang.String link, java.lang.Integer categoryId, java.lang.String categoryName) {
      super(Pollendpoint.this, "GET", REST_PATH, null, com.pipoll.entity.pollendpoint.model.Poll.class);
      this.topic = com.google.api.client.util.Preconditions.checkNotNull(topic, "Required parameter topic must be specified.");
      this.link = com.google.api.client.util.Preconditions.checkNotNull(link, "Required parameter link must be specified.");
      this.categoryId = com.google.api.client.util.Preconditions.checkNotNull(categoryId, "Required parameter categoryId must be specified.");
      this.categoryName = com.google.api.client.util.Preconditions.checkNotNull(categoryName, "Required parameter categoryName must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBEPoll setAlt(java.lang.String alt) {
      return (GetBEPoll) super.setAlt(alt);
    }

    @Override
    public GetBEPoll setFields(java.lang.String fields) {
      return (GetBEPoll) super.setFields(fields);
    }

    @Override
    public GetBEPoll setKey(java.lang.String key) {
      return (GetBEPoll) super.setKey(key);
    }

    @Override
    public GetBEPoll setOauthToken(java.lang.String oauthToken) {
      return (GetBEPoll) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBEPoll setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetBEPoll) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBEPoll setQuotaUser(java.lang.String quotaUser) {
      return (GetBEPoll) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBEPoll setUserIp(java.lang.String userIp) {
      return (GetBEPoll) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String topic;

    /**

     */
    public java.lang.String getTopic() {
      return topic;
    }

    public GetBEPoll setTopic(java.lang.String topic) {
      this.topic = topic;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String link;

    /**

     */
    public java.lang.String getLink() {
      return link;
    }

    public GetBEPoll setLink(java.lang.String link) {
      this.link = link;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer categoryId;

    /**

     */
    public java.lang.Integer getCategoryId() {
      return categoryId;
    }

    public GetBEPoll setCategoryId(java.lang.Integer categoryId) {
      this.categoryId = categoryId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String categoryName;

    /**

     */
    public java.lang.String getCategoryName() {
      return categoryName;
    }

    public GetBEPoll setCategoryName(java.lang.String categoryName) {
      this.categoryName = categoryName;
      return this;
    }

    @Override
    public GetBEPoll set(String parameterName, Object value) {
      return (GetBEPoll) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPoll".
   *
   * This request holds the parameters needed by the pollendpoint server.  After setting any optional
   * parameters, call the {@link GetPoll#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetPoll getPoll(java.lang.String id) throws java.io.IOException {
    GetPoll result = new GetPoll(id);
    initialize(result);
    return result;
  }

  public class GetPoll extends PollendpointRequest<com.pipoll.entity.pollendpoint.model.Poll> {

    private static final String REST_PATH = "poll/{id}";

    /**
     * Create a request for the method "getPoll".
     *
     * This request holds the parameters needed by the the pollendpoint server.  After setting any
     * optional parameters, call the {@link GetPoll#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetPoll#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetPoll(java.lang.String id) {
      super(Pollendpoint.this, "GET", REST_PATH, null, com.pipoll.entity.pollendpoint.model.Poll.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPoll setAlt(java.lang.String alt) {
      return (GetPoll) super.setAlt(alt);
    }

    @Override
    public GetPoll setFields(java.lang.String fields) {
      return (GetPoll) super.setFields(fields);
    }

    @Override
    public GetPoll setKey(java.lang.String key) {
      return (GetPoll) super.setKey(key);
    }

    @Override
    public GetPoll setOauthToken(java.lang.String oauthToken) {
      return (GetPoll) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPoll setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPoll) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPoll setQuotaUser(java.lang.String quotaUser) {
      return (GetPoll) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPoll setUserIp(java.lang.String userIp) {
      return (GetPoll) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetPoll setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetPoll set(String parameterName, Object value) {
      return (GetPoll) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertPoll".
   *
   * This request holds the parameters needed by the pollendpoint server.  After setting any optional
   * parameters, call the {@link InsertPoll#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.pipoll.entity.pollendpoint.model.Poll}
   * @return the request
   */
  public InsertPoll insertPoll(com.pipoll.entity.pollendpoint.model.Poll content) throws java.io.IOException {
    InsertPoll result = new InsertPoll(content);
    initialize(result);
    return result;
  }

  public class InsertPoll extends PollendpointRequest<com.pipoll.entity.pollendpoint.model.Poll> {

    private static final String REST_PATH = "poll";

    /**
     * Create a request for the method "insertPoll".
     *
     * This request holds the parameters needed by the the pollendpoint server.  After setting any
     * optional parameters, call the {@link InsertPoll#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertPoll#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.pipoll.entity.pollendpoint.model.Poll}
     * @since 1.13
     */
    protected InsertPoll(com.pipoll.entity.pollendpoint.model.Poll content) {
      super(Pollendpoint.this, "POST", REST_PATH, content, com.pipoll.entity.pollendpoint.model.Poll.class);
    }

    @Override
    public InsertPoll setAlt(java.lang.String alt) {
      return (InsertPoll) super.setAlt(alt);
    }

    @Override
    public InsertPoll setFields(java.lang.String fields) {
      return (InsertPoll) super.setFields(fields);
    }

    @Override
    public InsertPoll setKey(java.lang.String key) {
      return (InsertPoll) super.setKey(key);
    }

    @Override
    public InsertPoll setOauthToken(java.lang.String oauthToken) {
      return (InsertPoll) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertPoll setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertPoll) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertPoll setQuotaUser(java.lang.String quotaUser) {
      return (InsertPoll) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertPoll setUserIp(java.lang.String userIp) {
      return (InsertPoll) super.setUserIp(userIp);
    }

    @Override
    public InsertPoll set(String parameterName, Object value) {
      return (InsertPoll) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listPoll".
   *
   * This request holds the parameters needed by the pollendpoint server.  After setting any optional
   * parameters, call the {@link ListPoll#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListPoll listPoll() throws java.io.IOException {
    ListPoll result = new ListPoll();
    initialize(result);
    return result;
  }

  public class ListPoll extends PollendpointRequest<com.pipoll.entity.pollendpoint.model.CollectionResponsePoll> {

    private static final String REST_PATH = "poll";

    /**
     * Create a request for the method "listPoll".
     *
     * This request holds the parameters needed by the the pollendpoint server.  After setting any
     * optional parameters, call the {@link ListPoll#execute()} method to invoke the remote operation.
     * <p> {@link
     * ListPoll#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListPoll() {
      super(Pollendpoint.this, "GET", REST_PATH, null, com.pipoll.entity.pollendpoint.model.CollectionResponsePoll.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListPoll setAlt(java.lang.String alt) {
      return (ListPoll) super.setAlt(alt);
    }

    @Override
    public ListPoll setFields(java.lang.String fields) {
      return (ListPoll) super.setFields(fields);
    }

    @Override
    public ListPoll setKey(java.lang.String key) {
      return (ListPoll) super.setKey(key);
    }

    @Override
    public ListPoll setOauthToken(java.lang.String oauthToken) {
      return (ListPoll) super.setOauthToken(oauthToken);
    }

    @Override
    public ListPoll setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListPoll) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListPoll setQuotaUser(java.lang.String quotaUser) {
      return (ListPoll) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListPoll setUserIp(java.lang.String userIp) {
      return (ListPoll) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListPoll setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListPoll setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListPoll set(String parameterName, Object value) {
      return (ListPoll) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removePoll".
   *
   * This request holds the parameters needed by the pollendpoint server.  After setting any optional
   * parameters, call the {@link RemovePoll#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemovePoll removePoll(java.lang.String id) throws java.io.IOException {
    RemovePoll result = new RemovePoll(id);
    initialize(result);
    return result;
  }

  public class RemovePoll extends PollendpointRequest<Void> {

    private static final String REST_PATH = "poll/{id}";

    /**
     * Create a request for the method "removePoll".
     *
     * This request holds the parameters needed by the the pollendpoint server.  After setting any
     * optional parameters, call the {@link RemovePoll#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemovePoll#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemovePoll(java.lang.String id) {
      super(Pollendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemovePoll setAlt(java.lang.String alt) {
      return (RemovePoll) super.setAlt(alt);
    }

    @Override
    public RemovePoll setFields(java.lang.String fields) {
      return (RemovePoll) super.setFields(fields);
    }

    @Override
    public RemovePoll setKey(java.lang.String key) {
      return (RemovePoll) super.setKey(key);
    }

    @Override
    public RemovePoll setOauthToken(java.lang.String oauthToken) {
      return (RemovePoll) super.setOauthToken(oauthToken);
    }

    @Override
    public RemovePoll setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemovePoll) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemovePoll setQuotaUser(java.lang.String quotaUser) {
      return (RemovePoll) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemovePoll setUserIp(java.lang.String userIp) {
      return (RemovePoll) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public RemovePoll setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public RemovePoll set(String parameterName, Object value) {
      return (RemovePoll) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updatePoll".
   *
   * This request holds the parameters needed by the pollendpoint server.  After setting any optional
   * parameters, call the {@link UpdatePoll#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.pipoll.entity.pollendpoint.model.Poll}
   * @return the request
   */
  public UpdatePoll updatePoll(com.pipoll.entity.pollendpoint.model.Poll content) throws java.io.IOException {
    UpdatePoll result = new UpdatePoll(content);
    initialize(result);
    return result;
  }

  public class UpdatePoll extends PollendpointRequest<com.pipoll.entity.pollendpoint.model.Poll> {

    private static final String REST_PATH = "poll";

    /**
     * Create a request for the method "updatePoll".
     *
     * This request holds the parameters needed by the the pollendpoint server.  After setting any
     * optional parameters, call the {@link UpdatePoll#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdatePoll#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.pipoll.entity.pollendpoint.model.Poll}
     * @since 1.13
     */
    protected UpdatePoll(com.pipoll.entity.pollendpoint.model.Poll content) {
      super(Pollendpoint.this, "PUT", REST_PATH, content, com.pipoll.entity.pollendpoint.model.Poll.class);
    }

    @Override
    public UpdatePoll setAlt(java.lang.String alt) {
      return (UpdatePoll) super.setAlt(alt);
    }

    @Override
    public UpdatePoll setFields(java.lang.String fields) {
      return (UpdatePoll) super.setFields(fields);
    }

    @Override
    public UpdatePoll setKey(java.lang.String key) {
      return (UpdatePoll) super.setKey(key);
    }

    @Override
    public UpdatePoll setOauthToken(java.lang.String oauthToken) {
      return (UpdatePoll) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdatePoll setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdatePoll) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdatePoll setQuotaUser(java.lang.String quotaUser) {
      return (UpdatePoll) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdatePoll setUserIp(java.lang.String userIp) {
      return (UpdatePoll) super.setUserIp(userIp);
    }

    @Override
    public UpdatePoll set(String parameterName, Object value) {
      return (UpdatePoll) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Pollendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Pollendpoint}. */
    @Override
    public Pollendpoint build() {
      return new Pollendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link PollendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setPollendpointRequestInitializer(
        PollendpointRequestInitializer pollendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(pollendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
